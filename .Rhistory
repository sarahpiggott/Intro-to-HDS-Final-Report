labs(caption = "ScotPHO = Scottish Public Health Observatory, SIMD = Scottish Index of Multiple Deprivation. A person was considered to have depression symptoms in the past week if they had a symptom score of two or more on the depression section of the Revised Clinical Interview Schedule, indicating symptoms of moderate to high severity. The SIMD figures were age-standardised to the population of Scotland to aid comparison between the quintiles.") + #Add caption to define abbreviations
geom_errorbar(aes(ymin = lower_confidence_interval, ymax= upper_confidence_interval, width=0.1)) + #Add error bars using confidence interval data and specify size of bars
geom_text(aes(label = abs(value)), nudge_x = 0.2, size = 3) #Label the text, using absolute values (rather than negatives for females) and specify position and text sixe
breaks_values = c(seq(-40, 40, by = 10)) #Manually specifying breaks for the y-axis (which will be flipped to become the x-axis); limits of -40 and 40 and increments of 10
Scotland_2021_depression_data_female_negative %>%
ggplot(aes(x = SIMD_quintile, y = value, fill = Sex)) + #Plot % of people with depression patients in past week on y-axis by SIMD quintil on x-axis and differentiate sex with different fill colour
geom_bar(stat = "identity") + #Plot a bar chart
coord_flip() + #Flip the x-axis and y-axis
geom_hline(yintercept = 0) + #Add a solid line through y=0
theme_classic() + #Use a classic theme with a white background and solid lines on the axes
theme(legend.position = "top") + #Position the legend above the plot
scale_y_continuous(limits = c(-40,40), breaks = breaks_values, labels = abs(breaks_values)) + #Make the y-axis run from -40 to 40 (with increments of 10, as specified in breaks_values) and use absolute values for the labels (rather than negatives for females)
xlab("SIMD quintile") +   #Remove underscore from x-axis label
ylab("Adults with depression symptoms in past week, %") + #Add more detail to y-axis label
ggtitle("Adults (16+ years) with depression symptoms in Scotland in 2021", subtitle = "Data from ScotPHO, presented by sex and SIMD quintile") + #Add title and subtitle
labs(caption = "ScotPHO = Scottish Public Health Observatory, SIMD = Scottish Index of Multiple Deprivation. A person was considered to have depression symptoms in the past week if they had a symptom score of two or more on the depression section of the Revised Clinical Interview Schedule, indicating symptoms of moderate to high severity. The SIMD figures were age-standardised to the population of Scotland to aid comparison between the quintiles.") + #Add caption to define abbreviations +
wrap_labs()
breaks_values = c(seq(-40, 40, by = 10)) #Manually specifying breaks for the y-axis (which will be flipped to become the x-axis); limits of -40 and 40 and increments of 10
Scotland_2021_depression_data_female_negative %>%
ggplot(aes(x = SIMD_quintile, y = value, fill = Sex)) + #Plot % of people with depression patients in past week on y-axis by SIMD quintil on x-axis and differentiate sex with different fill colour
geom_bar(stat = "identity") + #Plot a bar chart
coord_flip() + #Flip the x-axis and y-axis
geom_hline(yintercept = 0) + #Add a solid line through y=0
theme_classic() + #Use a classic theme with a white background and solid lines on the axes
theme(legend.position = "top") + #Position the legend above the plot
scale_y_continuous(limits = c(-40,40), breaks = breaks_values, labels = abs(breaks_values)) + #Make the y-axis run from -40 to 40 (with increments of 10, as specified in breaks_values) and use absolute values for the labels (rather than negatives for females)
xlab("SIMD quintile") +   #Remove underscore from x-axis label
ylab("Adults with depression symptoms in past week, %") + #Add more detail to y-axis label
ggtitle("Adults (16+ years) with depression symptoms in Scotland in 2021", subtitle = "Data from ScotPHO, presented by sex and SIMD quintile") + #Add title and subtitle
labs(caption = "ScotPHO = Scottish Public Health Observatory, SIMD = Scottish Index of Multiple Deprivation. A person was considered to have depression symptoms in the past week if they had a symptom score of two or more on the depression section of the Revised Clinical Interview Schedule, indicating symptoms of moderate to high severity. The SIMD figures were age-standardised to the population of Scotland to aid comparison between the quintiles.") + #Add caption to define abbreviations +
wrap_labs() +
geom_errorbar(aes(ymin = lower_confidence_interval, ymax= upper_confidence_interval, width=0.1)) + #Add error bars using confidence interval data and specify size of bars
geom_text(aes(label = abs(value)), nudge_x = 0.2, size = 3) #Label the text, using absolute values (rather than negatives for females) and specify position and text sixe
breaks_values = c(seq(-40, 40, by = 10)) #Manually specifying breaks for the y-axis (which will be flipped to become the x-axis); limits of -40 and 40 and increments of 10
Scotland_2021_depression_data_female_negative %>%
ggplot(aes(x = SIMD_quintile, y = value, fill = Sex)) + #Plot % of people with depression patients in past week on y-axis by SIMD quintil on x-axis and differentiate sex with different fill colour
geom_bar(stat = "identity") + #Plot a bar chart
coord_flip() + #Flip the x-axis and y-axis
geom_hline(yintercept = 0) + #Add a solid line through y=0
theme_classic() + #Use a classic theme with a white background and solid lines on the axes
theme(legend.position = "top") + #Position the legend above the plot
scale_y_continuous(limits = c(-40,40), breaks = breaks_values, labels = abs(breaks_values)) + #Make the y-axis run from -40 to 40 (with increments of 10, as specified in breaks_values) and use absolute values for the labels (rather than negatives for females)
xlab("SIMD quintile") +   #Remove underscore from x-axis label
ylab("Adults with depression symptoms in past week, %") + #Add more detail to y-axis label
ggtitle("Adults (16+ years) with depression symptoms in Scotland in 2021", subtitle = "Data from ScotPHO, presented by sex and SIMD quintile") + #Add title and subtitle
labs(caption = "ScotPHO = Scottish Public Health Observatory, SIMD = Scottish Index of Multiple Deprivation. A person was considered to have depression symptoms in the past week if they had a symptom score of two or more on the depression section of the Revised Clinical Interview Schedule, indicating symptoms of moderate to high severity. The SIMD figures were age-standardised to the population of Scotland to aid comparison between the quintiles.") + #Add caption to define abbreviations +
wrap_labs(labs_to_wrap = c("caption")) +
geom_errorbar(aes(ymin = lower_confidence_interval, ymax= upper_confidence_interval, width=0.1)) + #Add error bars using confidence interval data and specify size of bars
geom_text(aes(label = abs(value)), nudge_x = 0.2, size = 3) #Label the text, using absolute values (rather than negatives for females) and specify position and text sixe
breaks_values = c(seq(-40, 40, by = 10)) #Manually specifying breaks for the y-axis (which will be flipped to become the x-axis); limits of -40 and 40 and increments of 10
Scotland_2021_depression_data_female_negative %>%
ggplot(aes(x = SIMD_quintile, y = value, fill = Sex)) + #Plot % of people with depression patients in past week on y-axis by SIMD quintil on x-axis and differentiate sex with different fill colour
geom_bar(stat = "identity") + #Plot a bar chart
coord_flip() + #Flip the x-axis and y-axis
geom_hline(yintercept = 0) + #Add a solid line through y=0
theme_classic() + #Use a classic theme with a white background and solid lines on the axes
theme(legend.position = "top") + #Position the legend above the plot
scale_y_continuous(limits = c(-40,40), breaks = breaks_values, labels = abs(breaks_values)) + #Make the y-axis run from -40 to 40 (with increments of 10, as specified in breaks_values) and use absolute values for the labels (rather than negatives for females)
xlab("SIMD quintile") +   #Remove underscore from x-axis label
ylab("Adults with depression symptoms in past week, %") + #Add more detail to y-axis label
ggtitle("Adults (16+ years) with depression symptoms in Scotland in 2021", subtitle = "Data from ScotPHO, presented by sex and SIMD quintile") + #Add title and subtitle
labs(caption = "ScotPHO = Scottish Public Health Observatory, SIMD = Scottish Index of Multiple Deprivation. \n A person was considered to have depression symptoms in the past week if they had a symptom score of two or more on the depression section of the Revised Clinical Interview Schedule, indicating symptoms of moderate to high severity. The SIMD figures were age-standardised to the population of Scotland to aid comparison between the quintiles.") + #Add caption to define abbreviations +
geom_errorbar(aes(ymin = lower_confidence_interval, ymax= upper_confidence_interval, width=0.1)) + #Add error bars using confidence interval data and specify size of bars
geom_text(aes(label = abs(value)), nudge_x = 0.2, size = 3) #Label the text, using absolute values (rather than negatives for females) and specify position and text sixe
breaks_values = c(seq(-40, 40, by = 10)) #Manually specifying breaks for the y-axis (which will be flipped to become the x-axis); limits of -40 and 40 and increments of 10
Scotland_2021_depression_data_female_negative %>%
ggplot(aes(x = SIMD_quintile, y = value, fill = Sex)) + #Plot % of people with depression patients in past week on y-axis by SIMD quintil on x-axis and differentiate sex with different fill colour
geom_bar(stat = "identity") + #Plot a bar chart
coord_flip() + #Flip the x-axis and y-axis
geom_hline(yintercept = 0) + #Add a solid line through y=0
theme_classic() + #Use a classic theme with a white background and solid lines on the axes
theme(legend.position = "top") + #Position the legend above the plot
scale_y_continuous(limits = c(-40,40), breaks = breaks_values, labels = abs(breaks_values)) + #Make the y-axis run from -40 to 40 (with increments of 10, as specified in breaks_values) and use absolute values for the labels (rather than negatives for females)
xlab("SIMD quintile") +   #Remove underscore from x-axis label
ylab("Adults with depression symptoms in past week, %") + #Add more detail to y-axis label
ggtitle("Adults (16+ years) with depression symptoms in Scotland in 2021", subtitle = "Data from ScotPHO, presented by sex and SIMD quintile") + #Add title and subtitle
labs(caption = "ScotPHO = Scottish Public Health Observatory, SIMD = Scottish Index of Multiple Deprivation. \n A person was considered to have depression symptoms in the past week if they had a symptom score of two or more on the depression section of the Revised Clinical Interview Schedule, indicating symptoms of moderate to high severity. \n The SIMD figures were age-standardised to the population of Scotland to aid comparison between the quintiles.") + #Add caption to define abbreviations +
geom_errorbar(aes(ymin = lower_confidence_interval, ymax= upper_confidence_interval, width=0.1)) + #Add error bars using confidence interval data and specify size of bars
geom_text(aes(label = abs(value)), nudge_x = 0.2, size = 3) #Label the text, using absolute values (rather than negatives for females) and specify position and text sixe
breaks_values = c(seq(-40, 40, by = 10)) #Manually specifying breaks for the y-axis (which will be flipped to become the x-axis); limits of -40 and 40 and increments of 10
Scotland_2021_depression_data_female_negative %>%
ggplot(aes(x = SIMD_quintile, y = value, fill = Sex)) + #Plot % of people with depression patients in past week on y-axis by SIMD quintil on x-axis and differentiate sex with different fill colour
geom_bar(stat = "identity") + #Plot a bar chart
coord_flip() + #Flip the x-axis and y-axis
geom_hline(yintercept = 0) + #Add a solid line through y=0
theme_classic() + #Use a classic theme with a white background and solid lines on the axes
theme(legend.position = "top") + #Position the legend above the plot
scale_y_continuous(limits = c(-40,40), breaks = breaks_values, labels = abs(breaks_values)) + #Make the y-axis run from -40 to 40 (with increments of 10, as specified in breaks_values) and use absolute values for the labels (rather than negatives for females)
xlab("SIMD quintile") +   #Remove underscore from x-axis label
ylab("Adults with depression symptoms in past week, %") + #Add more detail to y-axis label
ggtitle("Adults (16+ years) with depression symptoms in Scotland in 2021", subtitle = "Data from ScotPHO, presented by sex and SIMD quintile") + #Add title and subtitle
labs(caption = "ScotPHO = Scottish Public Health Observatory, SIMD = Scottish Index of Multiple Deprivation. \n A person was considered to have depression symptoms in the past week if they had a symptom score of two or more on the depression section \n of the Revised Clinical Interview Schedule, indicating symptoms of moderate to high severity. \n The SIMD figures were age-standardised to the population of Scotland to aid comparison between the quintiles.") + #Add caption to define abbreviations +
geom_errorbar(aes(ymin = lower_confidence_interval, ymax= upper_confidence_interval, width=0.1)) + #Add error bars using confidence interval data and specify size of bars
geom_text(aes(label = abs(value)), nudge_x = 0.2, size = 3) #Label the text, using absolute values (rather than negatives for females) and specify position and text sixe
breaks_values = c(seq(-40, 40, by = 10)) #Manually specifying breaks for the y-axis (which will be flipped to become the x-axis); limits of -40 and 40 and increments of 10
Scotland_2021_depression_data_female_negative %>%
ggplot(aes(x = SIMD_quintile, y = value, fill = Sex)) + #Plot % of people with depression patients in past week on y-axis by SIMD quintil on x-axis and differentiate sex with different fill colour
geom_bar(stat = "identity") + #Plot a bar chart
coord_flip() + #Flip the x-axis and y-axis
geom_hline(yintercept = 0) + #Add a solid line through y=0
theme_classic() + #Use a classic theme with a white background and solid lines on the axes
theme(legend.position = "top") + #Position the legend above the plot
scale_y_continuous(limits = c(-40,40), breaks = breaks_values, labels = abs(breaks_values)) + #Make the y-axis run from -40 to 40 (with increments of 10, as specified in breaks_values) and use absolute values for the labels (rather than negatives for females)
xlab("SIMD quintile") +   #Remove underscore from x-axis label
ylab("Adults with depression symptoms in past week, %") + #Add more detail to y-axis label
ggtitle("Adults (16+ years) with depression symptoms in Scotland in 2021", subtitle = "Data from ScotPHO, presented by sex and SIMD quintile") + #Add title and subtitle
labs(caption = "ScotPHO = Scottish Public Health Observatory, SIMD = Scottish Index of Multiple Deprivation. \n A person was considered to have depression symptoms in the past week if they had a symptom score of two or more \n on the depression section of the Revised Clinical Interview Schedule, indicating symptoms of moderate to high severity. \n The SIMD figures were age-standardised to the population of Scotland to aid comparison between the quintiles.") + #Add caption to define abbreviations +
geom_errorbar(aes(ymin = lower_confidence_interval, ymax= upper_confidence_interval, width=0.1)) + #Add error bars using confidence interval data and specify size of bars
geom_text(aes(label = abs(value)), nudge_x = 0.2, size = 3) #Label the text, using absolute values (rather than negatives for females) and specify position and text sixe
breaks_values = c(seq(-40, 40, by = 10)) #Manually specifying breaks for the y-axis (which will be flipped to become the x-axis); limits of -40 and 40 and increments of 10
Scotland_2021_depression_data_female_negative %>%
ggplot(aes(x = SIMD_quintile, y = value, fill = Sex)) + #Plot % of people with depression patients in past week on y-axis by SIMD quintil on x-axis and differentiate sex with different fill colour
geom_bar(stat = "identity") + #Plot a bar chart
coord_flip() + #Flip the x-axis and y-axis
geom_hline(yintercept = 0) + #Add a solid line through y=0
theme_classic() + #Use a classic theme with a white background and solid lines on the axes
theme(legend.position = "top") + #Position the legend above the plot
scale_y_continuous(limits = c(-40,40), breaks = breaks_values, labels = abs(breaks_values)) + #Make the y-axis run from -40 to 40 (with increments of 10, as specified in breaks_values) and use absolute values for the labels (rather than negatives for females)
xlab("SIMD quintile") +   #Remove underscore from x-axis label
ylab("Adults with depression symptoms in past week, %") + #Add more detail to y-axis label
ggtitle("Adults (16+ years) with depression symptoms in Scotland in 2021", subtitle = "Data from ScotPHO, presented by sex and SIMD quintile") + #Add title and subtitle
labs(caption = "ScotPHO = Scottish Public Health Observatory, SIMD = Scottish Index of Multiple Deprivation. \n A person was considered to have depression symptoms in the past week if they had a symptom score of two or more \n on the depression section of the Revised Clinical Interview Schedule, indicating symptoms of moderate to high severity. \n The SIMD figures were age-standardised to the population of Scotland to aid comparison between the quintiles. \n Error bars are confidence intervals.") + #Add caption to define abbreviations and include extra notes from ScotPHO website regarding the data +
geom_errorbar(aes(ymin = lower_confidence_interval, ymax= upper_confidence_interval, width=0.1)) + #Add error bars using confidence interval data and specify size of bars
geom_text(aes(label = abs(value)), nudge_x = 0.2, size = 3) #Label the text, using absolute values (rather than negatives for females) and specify position and text sixe
breaks_values = c(seq(-40, 40, by = 10)) #Manually specifying breaks for the y-axis (which will be flipped to become the x-axis); limits of -40 and 40 and increments of 10
Scotland_2021_depression_data_female_negative %>%
ggplot(aes(x = SIMD_quintile, y = value, fill = Sex)) + #Plot % of people with depression patients in past week on y-axis by SIMD quintil on x-axis and differentiate sex with different fill colour
geom_bar(stat = "identity") + #Plot a bar chart
coord_flip() + #Flip the x-axis and y-axis
geom_hline(yintercept = 0) + #Add a solid line through y=0
theme_classic() + #Use a classic theme with a white background and solid lines on the axes
theme(legend.position = "top") + #Position the legend above the plot
scale_y_continuous(limits = c(-40,40), breaks = breaks_values, labels = abs(breaks_values)) + #Make the y-axis run from -40 to 40 (with increments of 10, as specified in breaks_values) and use absolute values for the labels (rather than negatives for females)
xlab("SIMD quintile") +   #Remove underscore from x-axis label
ylab("Adults aged 16+ years with depression symptoms in past week, %") + #Add more detail to y-axis label
ggtitle("Adults (16+ years) with depression symptoms in Scotland in 2021", subtitle = "Data from ScotPHO, presented by sex and SIMD quintile") + #Add title and subtitle
labs(caption = "ScotPHO = Scottish Public Health Observatory, SIMD = Scottish Index of Multiple Deprivation. \n A person was considered to have depression symptoms in the past week if they had a symptom score of two or more \n on the depression section of the Revised Clinical Interview Schedule, indicating symptoms of moderate to high severity. \n The SIMD figures were age-standardised to the population of Scotland to aid comparison between the quintiles. \n Error bars are confidence intervals.") + #Add caption to define abbreviations and include extra notes from ScotPHO website regarding the data +
geom_errorbar(aes(ymin = lower_confidence_interval, ymax= upper_confidence_interval, width=0.1)) + #Add error bars using confidence interval data and specify size of bars
geom_text(aes(label = abs(value)), nudge_x = 0.2, size = 3) #Label the text, using absolute values (rather than negatives for females) and specify position and text sixe
breaks_values = c(seq(-40, 40, by = 10)) #Manually specifying breaks for the y-axis (which will be flipped to become the x-axis); limits of -40 and 40 and increments of 10
Scotland_2021_depression_data_female_negative %>%
ggplot(aes(x = SIMD_quintile, y = value, fill = Sex)) + #Plot % of people with depression patients in past week on y-axis by SIMD quintil on x-axis and differentiate sex with different fill colour
geom_bar(stat = "identity") + #Plot a bar chart
coord_flip() + #Flip the x-axis and y-axis
geom_hline(yintercept = 0) + #Add a solid line through y=0
theme_classic() + #Use a classic theme with a white background and solid lines on the axes
theme(legend.position = "top") + #Position the legend above the plot
scale_y_continuous(limits = c(-40,40), breaks = breaks_values, labels = abs(breaks_values)) + #Make the y-axis run from -40 to 40 (with increments of 10, as specified in breaks_values) and use absolute values for the labels (rather than negatives for females)
xlab("SIMD quintile") +   #Remove underscore from x-axis label
ylab("Adults aged 16+ years with depression symptoms in past week, %") + #Add more detail to y-axis label
ggtitle("Adults aged 16+ years with depression symptoms in Scotland in 2021", subtitle = "Data from ScotPHO, presented by sex and SIMD quintile") + #Add title and subtitle
labs(caption = "ScotPHO = Scottish Public Health Observatory, SIMD = Scottish Index of Multiple Deprivation. \n A person was considered to have depression symptoms in the past week if they had a symptom score of two or more \n on the depression section of the Revised Clinical Interview Schedule, indicating symptoms of moderate to high severity. \n The SIMD figures were age-standardised to the population of Scotland to aid comparison between the quintiles. \n Error bars are confidence intervals.") + #Add caption to define abbreviations and include extra notes from ScotPHO website regarding the data +
geom_errorbar(aes(ymin = lower_confidence_interval, ymax= upper_confidence_interval, width=0.1)) + #Add error bars using confidence interval data and specify size of bars
geom_text(aes(label = abs(value)), nudge_x = 0.2, size = 3) #Label the text, using absolute values (rather than negatives for females) and specify position and text sixe
install.packages("formatR")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(formatR)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(tidyverse)
library(formatR)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
data <- read.csv("Inputs/ScotPHO_data_extract_2024-11-28.csv")
glimpse(data)
Scotland_2021_depression_data <- data %>%
select(indicator, quintile, measure, value, upper_confidence_interval, lower_confidence_interval) %>% #Select columns of interest
slice(1:5, 7:11) #Selecting the rows for male and female data. Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
mutate(Sex = c('Female','Female','Female','Female','Female','Male','Male','Male','Male','Male')) #Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool.
library(tidyverse)
library(formatR)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
data <- read.csv("Inputs/ScotPHO_data_extract_2024-11-28.csv")
glimpse(data)
Scotland_2021_depression_data <- data %>%
select(indicator, quintile, measure, value, upper_confidence_interval, lower_confidence_interval) %>% #Select columns of interest
slice(1:5, 7:11) #Selecting the rows for male and female data. Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
mutate(Sex = c('Female','Female','Female','Female','Female','Male','Male','Male','Male','Male')) #Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool.
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
rename('SIMD_quintile' = 'quintile')
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
relocate('Sex', 'SIMD_quintile', .before = 'indicator')
tibble(Scotland_2021_depression_data)
write_csv(Scotland_2021_depression_data, "Scotland_2021_depression_data.csv")
Scotland_2021_depression_data_female_negative  <- Scotland_2021_depression_data %>%
mutate(value = ifelse(Sex == 'Male',
value,
-1*value)) %>% #For female rows, multiply value by -1
mutate(upper_confidence_interval = ifelse(Sex == 'Male',
upper_confidence_interval,
-1*upper_confidence_interval)) %>% #For female rows, multiply upper CI by -1
mutate(lower_confidence_interval = ifelse(Sex == 'Male',
lower_confidence_interval,
-1*lower_confidence_interval)) #For female rows, multiply lower CI by -1
library(tidyverse)
library(formatR)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
data <- read.csv("Inputs/ScotPHO_data_extract_2024-11-28.csv")
glimpse(data)
Scotland_2021_depression_data <- data %>%
select(indicator, quintile, measure, value, upper_confidence_interval, lower_confidence_interval) %>%
#Select columns of interest
slice(1:5, 7:11)
#Selecting the rows for male and female data. Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
mutate(Sex = c('Female','Female','Female','Female','Female','Male','Male','Male','Male','Male')
#Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool.
library(tidyverse)
library(formatR)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
data <- read.csv("Inputs/ScotPHO_data_extract_2024-11-28.csv")
glimpse(data)
Scotland_2021_depression_data <- data %>%
select(indicator, quintile, measure, value, upper_confidence_interval, lower_confidence_interval) %>%
#Select columns of interest
slice(1:5, 7:11)
#Selecting the rows for male and female data. Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
mutate(Sex = c('Female','Female','Female','Female','Female','Male','Male','Male','Male','Male'))
#Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool.
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
rename('SIMD_quintile' = 'quintile')
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
relocate('Sex', 'SIMD_quintile', .before = 'indicator')
tibble(Scotland_2021_depression_data)
write_csv(Scotland_2021_depression_data, "Scotland_2021_depression_data.csv")
Scotland_2021_depression_data_female_negative  <- Scotland_2021_depression_data %>%
mutate(value = ifelse(Sex == 'Male',
value,
-1*value)) %>%
#For female rows, multiply value by -1
mutate(upper_confidence_interval = ifelse(Sex == 'Male',
upper_confidence_interval,
-1*upper_confidence_interval)) %>%
#For female rows, multiply upper CI by -1
mutate(lower_confidence_interval = ifelse(Sex == 'Male',
lower_confidence_interval,
-1*lower_confidence_interval))
#For female rows, multiply lower CI by -1
library(tidyverse)
library(formatR)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
data <- read.csv("Inputs/ScotPHO_data_extract_2024-11-28.csv")
glimpse(data)
Scotland_2021_depression_data <- data %>%
select(indicator, quintile, measure, value, upper_confidence_interval, lower_confidence_interval) %>%
#Select columns of interest
slice(1:5, 7:11)
#Selecting the rows for male and female data. Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
mutate(Sex = c('Female','Female','Female','Female','Female','Male','Male','Male','Male','Male'))
#Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool.
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
rename('SIMD_quintile' = 'quintile')
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
relocate('Sex', 'SIMD_quintile', .before = 'indicator')
tibble(Scotland_2021_depression_data)
write_csv(Scotland_2021_depression_data, "Scotland_2021_depression_data.csv")
Scotland_2021_depression_data_female_negative  <- Scotland_2021_depression_data %>%
mutate(value = ifelse(Sex == 'Male',
value,
-1*value)) %>%
#For female rows, multiply value by -1
mutate(upper_confidence_interval = ifelse(Sex == 'Male',
upper_confidence_interval,
-1*upper_confidence_interval)) %>%
#For female rows, multiply upper CI by -1
mutate(lower_confidence_interval = ifelse(Sex == 'Male',
lower_confidence_interval,
-1*lower_confidence_interval))
#For female rows, multiply lower CI by -1
library(tidyverse)
library(formatR)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
data <- read.csv("Inputs/ScotPHO_data_extract_2024-11-28.csv")
glimpse(data)
Scotland_2021_depression_data <- data %>%
select(indicator, quintile, measure, value, upper_confidence_interval, lower_confidence_interval) %>%
#Select columns of interest
slice(1:5, 7:11)
#Selecting the rows for male and female data. Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
mutate(Sex = c('Female','Female','Female','Female','Female','Male','Male','Male','Male','Male'))
#Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool.
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
rename('SIMD_quintile' = 'quintile')
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
relocate('Sex', 'SIMD_quintile', .before = 'indicator')
tibble(Scotland_2021_depression_data)
write_csv(Scotland_2021_depression_data, "Scotland_2021_depression_data.csv")
Scotland_2021_depression_data_female_negative  <- Scotland_2021_depression_data %>%
mutate(value = ifelse(Sex == 'Male',
value,
-1*value)) %>%
#For female rows, multiply value by -1
mutate(upper_confidence_interval = ifelse(Sex == 'Male',
upper_confidence_interval,
-1*upper_confidence_interval)) %>%
#For female rows, multiply upper CI by -1
mutate(lower_confidence_interval = ifelse(Sex == 'Male',
lower_confidence_interval,
-1*lower_confidence_interval))
#For female rows, multiply lower CI by -1
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
Scotland_2021_depression_data <- data %>%
select(indicator, quintile, measure, value, upper_confidence_interval, lower_confidence_interval) %>%
#Select columns of interest
slice(1:5, 7:11)
#Selecting the rows for male and female data. Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
mutate(Sex = c('Female','Female','Female','Female','Female','Male','Male','Male','Male','Male'))
#Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool.
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
rename('SIMD_quintile' = 'quintile')
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
relocate('Sex', 'SIMD_quintile', .before = 'indicator')
tibble(Scotland_2021_depression_data)
write_csv(Scotland_2021_depression_data, "Scotland_2021_depression_data.csv")
Scotland_2021_depression_data_female_negative  <- Scotland_2021_depression_data %>%
mutate(value = ifelse(Sex == 'Male',
value,
-1*value)) %>%
#For female rows, multiply value by -1
mutate(upper_confidence_interval = ifelse(Sex == 'Male',
upper_confidence_interval,
-1*upper_confidence_interval)) %>%
#For female rows, multiply upper CI by -1
mutate(lower_confidence_interval = ifelse(Sex == 'Male',
lower_confidence_interval,
-1*lower_confidence_interval))
#For female rows, multiply lower CI by -1
breaks_values = c(seq(-40, 40, by = 10))
#Manually specifying breaks for the y-axis, which will be flipped to become the x-axis; limits of -40 and 40 and increments of 10
Scotland_2021_depression_data_female_negative %>%
ggplot(aes(x = SIMD_quintile, y = value, fill = Sex)) +
#Plot % of people with depression patients in past week on y-axis by SIMD quintil on x-axis and differentiate sex with different fill colour
geom_bar(stat = "identity") +
#Plot a bar chart
coord_flip() +
#Flip the x-axis and y-axis
geom_hline(yintercept = 0) +
#Add a solid line through y=0
theme_classic() +
#Use a classic theme with a white background and solid lines on the axes
theme(legend.position = "top") +
#Position the legend above the plot
scale_y_continuous(limits = c(-40,40), breaks = breaks_values, labels = abs(breaks_values)) + #Make the y-axis run from -40 to 40, with increments of 10, as specified in breaks_values, and    use absolute values for the labels, rather than negatives for females
xlab("SIMD quintile") +
#Remove underscore from x-axis label
ylab("Adults aged 16+ years with depression symptoms in past week, %") +
#Add more detail to y-axis label
ggtitle("Adults aged 16+ years with depression symptoms in Scotland in 2021", subtitle = "Data from ScotPHO, presented by sex and SIMD quintile") +
#Add title and subtitle
labs(caption = "ScotPHO = Scottish Public Health Observatory, SIMD = Scottish Index of Multiple Deprivation. \n A person was considered to have depression symptoms in the past week if they had a symptom score of two or more \n on the depression section of the Revised Clinical Interview Schedule, indicating symptoms of moderate to high severity. \n The SIMD figures were age-standardised to the population of Scotland to aid comparison between the quintiles. \n Error bars are confidence intervals.") +
#Add caption to define abbreviations and include extra notes from ScotPHO website regarding the   data +
geom_errorbar(aes(ymin = lower_confidence_interval, ymax= upper_confidence_interval, width=0.1)) +
#Add error bars using confidence interval data and specify size of bars
geom_text(aes(label = abs(value)), nudge_x = 0.2, size = 3)
#Label the text, using absolute values, rather than negatives for females, and specify position and text size
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data <- read.csv("Inputs/ScotPHO_data_extract_2024-11-28.csv")
glimpse(data)
Scotland_2021_depression_data <- data %>%
select(indicator, quintile, measure, value, upper_confidence_interval, lower_confidence_interval) %>% #Select columns of interest
slice(1:5, 7:11) #Selecting the rows for male and female data. Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
mutate(Sex = c('Female','Female','Female','Female','Female','Male','Male','Male','Male','Male')) #Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool.
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
rename('SIMD_quintile' = 'quintile')
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
relocate('Sex', 'SIMD_quintile', .before = 'indicator')
tibble(Scotland_2021_depression_data)
write_csv(Scotland_2021_depression_data, "Scotland_2021_depression_data.csv")
Scotland_2021_depression_data_female_negative  <- Scotland_2021_depression_data %>%
mutate(value = ifelse(Sex == 'Male',
value,
-1*value)) %>% #For female rows, multiply value by -1
mutate(upper_confidence_interval = ifelse(Sex == 'Male',
upper_confidence_interval,
-1*upper_confidence_interval)) %>% #For female rows, multiply upper CI by -1
mutate(lower_confidence_interval = ifelse(Sex == 'Male',
lower_confidence_interval,
-1*lower_confidence_interval)) #For female rows, multiply lower CI by -1
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data <- read.csv("Inputs/ScotPHO_data_extract_2024-11-28.csv")
glimpse(data)
Scotland_2021_depression_data <- data %>%
select(indicator, quintile, measure, value, upper_confidence_interval, lower_confidence_interval) %>% #Select columns of interest
slice(1:5, 7:11) #Selecting the rows for male and female data. Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
mutate(Sex = c('Female','Female','Female','Female','Female','Male','Male','Male','Male','Male')) #Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool.
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
rename('SIMD_quintile' = 'quintile')
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
relocate('Sex', 'SIMD_quintile', .before = 'indicator')
tibble(Scotland_2021_depression_data)
write_csv(Scotland_2021_depression_data, "Scotland_2021_depression_data.csv")
Scotland_2021_depression_data_female_negative  <- Scotland_2021_depression_data %>%
mutate(value = ifelse(Sex == 'Male',
value,
-1*value)) %>% #For female rows, multiply value by -1
mutate(upper_confidence_interval = ifelse(Sex == 'Male',
upper_confidence_interval,
-1*upper_confidence_interval)) %>% #For female rows, multiply upper CI by -1
mutate(lower_confidence_interval = ifelse(Sex == 'Male',
lower_confidence_interval,
-1*lower_confidence_interval)) #For female rows, multiply lower CI by -1
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(tidyverse)
library(formatR)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(tidyverse)
library(formatR)
data <- read.csv("Inputs/ScotPHO_data_extract_2024-11-28.csv")
glimpse(data)
Scotland_2021_depression_data <- data %>%
select(indicator, quintile, measure, value, upper_confidence_interval, lower_confidence_interval) %>% #Select columns of interest
slice(1:5, 7:11) #Selecting the rows for male and female data. Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
mutate(Sex = c('Female','Female','Female','Female','Female','Male','Male','Male','Male','Male')) #Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool.
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
rename('SIMD_quintile' = 'quintile')
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
relocate('Sex', 'SIMD_quintile', .before = 'indicator')
tibble(Scotland_2021_depression_data)
write_csv(Scotland_2021_depression_data, "Scotland_2021_depression_data.csv")
Scotland_2021_depression_data_female_negative  <- Scotland_2021_depression_data %>%
mutate(value = ifelse(Sex == 'Male',
value,
-1*value)) %>% #For female rows, multiply value by -1
mutate(upper_confidence_interval = ifelse(Sex == 'Male',
upper_confidence_interval,
-1*upper_confidence_interval)) %>% #For female rows, multiply upper CI by -1
mutate(lower_confidence_interval = ifelse(Sex == 'Male',
lower_confidence_interval,
-1*lower_confidence_interval)) #For female rows, multiply lower CI by -1
unlink("WIP_cache", recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data <- read.csv("Inputs/ScotPHO_data_extract_2024-11-28.csv")
glimpse(data)
Scotland_2021_depression_data <- data %>%
select(indicator, quintile, measure, value, upper_confidence_interval, lower_confidence_interval) %>% #Select columns of interest
slice(1:5, 7:11) #Selecting the rows for male and female data. Sex did not appear to be included in the downloadable csv file, so the only option seemed to be to manually check this against the bar charts on the ScotPHO profiles tool
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
mutate(Sex = c('Female','Female','Female','Female','Female','Male','Male','Male','Male','Male')) #Sex did not appear to be included in the downloadable csv file,
#so the only option seemed to be to manually check this
#against the bar charts on the ScotPHO profiles tool.
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
rename('SIMD_quintile' = 'quintile')
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
relocate('Sex', 'SIMD_quintile', .before = 'indicator')
tibble(Scotland_2021_depression_data)
write_csv(Scotland_2021_depression_data, "Scotland_2021_depression_data.csv")
Scotland_2021_depression_data_female_negative  <- Scotland_2021_depression_data %>%
mutate(value = ifelse(Sex == 'Male',
value,
-1*value)) %>%
#For female rows, multiply value by -1
mutate(upper_confidence_interval = ifelse(Sex == 'Male',
upper_confidence_interval,
-1*upper_confidence_interval)) %>%
#For female rows, multiply upper CI by -1
mutate(lower_confidence_interval = ifelse(Sex == 'Male',
lower_confidence_interval,
-1*lower_confidence_interval))
#For female rows, multiply lower CI by -1
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data <- read.csv("Inputs/ScotPHO_data_extract_2024-11-28.csv")
glimpse(data)
Scotland_2021_depression_data <- data %>%
select(indicator, quintile, measure, value,
upper_confidence_interval, lower_confidence_interval) %>%
#Select columns of interest
slice(1:5, 7:11)
#Selecting the rows for male and female data.
#Sex did not appear to be included in the downloadable csv file,
#so the only option seemed to be to manually check this
#against the bar charts on the ScotPHO profiles tool
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
mutate(Sex = c('Female','Female','Female','Female','Female',
'Male','Male','Male','Male','Male'))
#Sex did not appear to be included in the downloadable csv file,
#so the only option seemed to be to manually check this
#against the bar charts on the ScotPHO profiles tool.
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
rename('SIMD_quintile' = 'quintile')
Scotland_2021_depression_data <- Scotland_2021_depression_data %>%
relocate('Sex', 'SIMD_quintile', .before = 'indicator')
tibble(Scotland_2021_depression_data)
write_csv(Scotland_2021_depression_data, "Scotland_2021_depression_data.csv")
Scotland_2021_depression_data_female_negative  <- Scotland_2021_depression_data %>%
mutate(value = ifelse(Sex == 'Male',
value,
-1*value)) %>%
#For female rows, multiply value by -1
mutate(upper_confidence_interval = ifelse(Sex == 'Male',
upper_confidence_interval,
-1*upper_confidence_interval)) %>%
#For female rows, multiply upper CI by -1
mutate(lower_confidence_interval = ifelse(Sex == 'Male',
lower_confidence_interval,
-1*lower_confidence_interval))
#For female rows, multiply lower CI by -1
